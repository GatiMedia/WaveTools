Keyer {
 operation "luminance key"
 name WaveKeyer
 selected true
 xpos 290
 ypos -304
 addUserKnob {20 User}
 addUserKnob {22 random_wave l "<font color=#cccccc>Add Random Wave" T "# Add Random Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Random Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#20bd2b>Random Wave Added\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['range'].clearAnimated()\n    waveMul\['range'].setExpression(\"random((frame+offset+a_offset)/waveLength) * (maxVala-minVala) + minVala\", 0)\n    waveMul\['range'].setExpression(\"random((frame+offset+b_offset)/waveLength) * (maxValb-minValb) + minValb\", 1)\n    waveMul\['range'].setExpression(\"random((frame+offset+c_offset)/waveLength) * (maxValc-minValc) + minValc\", 2)\n    waveMul\['range'].setExpression(\"random((frame+offset+d_offset)/waveLength) * (maxVald-minVald) + minVald\", 3)\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Random Wave is already added!\"\"\")" +STARTLINE}
 addUserKnob {22 sine_wave l "<font color=#cccccc>Add Sine Wave" -STARTLINE T "# Add Sine Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Sine Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#20bd2b>Sine Wave Added\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['range'].clearAnimated()\n    waveMul\['range'].setExpression(\"(sin(2*pi*(frame+offset+a_offset)/waveLength)+1)/2 * (maxVala-minVala) + minVala\", 0)\n    waveMul\['range'].setExpression(\"(sin(2*pi*(frame+offset+b_offset)/waveLength)+1)/2 * (maxValb-minValb) + minValb\", 1)\n    waveMul\['range'].setExpression(\"(sin(2*pi*(frame+offset+c_offset)/waveLength)+1)/2 * (maxValc-minValc) + minValc\", 2)\n    waveMul\['range'].setExpression(\"(sin(2*pi*(frame+offset+d_offset)/waveLength)+1)/2 * (maxVald-minVald) + minVald\", 3)\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Sine Wave is already added!\"\"\")"}
 addUserKnob {22 triangle_wave l "<font color=#cccccc>Add Triangle Wave" -STARTLINE T "# Add Triangle Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Triangle Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#20bd2b>Triangle Wave Added\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['range'].clearAnimated()\n    waveMul\['range'].setExpression(\"(asin(sin(2*pi*(frame+offset+a_offset)/waveLength))/pi+0.5) * (maxVala-minVala) + minVala\", 0)\n    waveMul\['range'].setExpression(\"(asin(sin(2*pi*(frame+offset+b_offset)/waveLength))/pi+0.5) * (maxValb-minValb) + minValb\", 1)\n    waveMul\['range'].setExpression(\"(asin(sin(2*pi*(frame+offset+c_offset)/waveLength))/pi+0.5) * (maxValc-minValc) + minValc\", 2)\n    waveMul\['range'].setExpression(\"(asin(sin(2*pi*(frame+offset+d_offset)/waveLength))/pi+0.5) * (maxVald-minVald) + minVald\", 3)\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Triangle Wave is already added!\"\"\")"}
 addUserKnob {22 square_wave l "<font color=#cccccc>Add Square Wave" T "# Add Square Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Square Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#20bd2b>Square Wave Added\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['range'].clearAnimated()\n    waveMul\['range'].setExpression(\"int(sin(2*pi*(frame+offset+a_offset)/waveLength)+1) * (maxVala-minVala) + minVala\", 0)\n    waveMul\['range'].setExpression(\"int(sin(2*pi*(frame+offset+b_offset)/waveLength)+1) * (maxValb-minValb) + minValb\", 1)\n    waveMul\['range'].setExpression(\"int(sin(2*pi*(frame+offset+c_offset)/waveLength)+1) * (maxValc-minValc) + minValc\", 2)\n    waveMul\['range'].setExpression(\"int(sin(2*pi*(frame+offset+d_offset)/waveLength)+1) * (maxVald-minVald) + minVald\", 3)\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Square Wave is already added!\"\"\")" +STARTLINE}
 addUserKnob {22 sawtooth_wave l "<font color=#cccccc>Add Sawtooth Wave" -STARTLINE T "# Add Sawtooth Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Sawtooth Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#20bd2b>Sawtooth Wave Added\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['range'].clearAnimated()\n    waveMul\['range'].setExpression(\"((frame+offset+a_offset) % waveLength)/waveLength * (maxVala-minVala) + minVala\", 0)\n    waveMul\['range'].setExpression(\"((frame+offset+b_offset) % waveLength)/waveLength * (maxValb-minValb) + minValb\", 1)\n    waveMul\['range'].setExpression(\"((frame+offset+c_offset) % waveLength)/waveLength * (maxValc-minValc) + minValc\", 2)\n    waveMul\['range'].setExpression(\"((frame+offset+d_offset) % waveLength)/waveLength * (maxVald-minVald) + minVald\", 3)\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Sawtooth Wave is already added!\"\"\")"}
 addUserKnob {22 bounce_wave l "<font color=#cccccc>Add Bounce Wave" -STARTLINE T "# Add Bounce Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Bounce Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#20bd2b>Bounce Wave Added\")\n\n    waveMul\['range'].clearAnimated()\n    waveMul\['range'].setExpression(\"abs(sin(pi*(frame + offset + a_offset)/waveLength))* (maxVala-minVala) + minVala\", 0)\n    waveMul\['range'].setExpression(\"abs(sin(pi*(frame + offset + b_offset)/waveLength))* (maxValb-minValb) + minValb\", 1)\n    waveMul\['range'].setExpression(\"abs(sin(pi*(frame + offset + c_offset)/waveLength))* (maxValc-minValc) + minValc\", 2)\n    waveMul\['range'].setExpression(\"abs(sin(pi*(frame + offset + d_offset)/waveLength))* (maxVald-minVald) + minVald\", 3)\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Bounce Wave is already added!\"\"\")"}
 addUserKnob {26 ""}
 addUserKnob {7 waveLength R 0 100}
 waveLength 10
 addUserKnob {7 offset t "\t\t" R -100 100}
 addUserKnob {26 ""}
 addUserKnob {7 maxVala l "A maxVal" R 0 5}
 addUserKnob {7 minVala l "A minVal" R 0 5}
 addUserKnob {26 ""}
 addUserKnob {7 maxValb l "B maxVal" R 0 5}
 maxValb 2
 addUserKnob {7 minValb l "B minVal" R 0 5}
 addUserKnob {26 ""}
 addUserKnob {7 maxValc l "C maxVal" R 0 5}
 maxValc 2
 addUserKnob {7 minValc l "C minVal" R 0 5}
 minValc 2
 addUserKnob {26 ""}
 addUserKnob {7 maxVald l "D maxVal" R 0 5}
 maxVald 2
 addUserKnob {7 minVald l "D minVal" R 0 5}
 minVald 2
 addUserKnob {26 ""}
 addUserKnob {20 _offset l Offset n 1}
 _offset 0
 addUserKnob {7 a_offset l "A offset" R -5 5}
 addUserKnob {7 b_offset l "B offset" R -5 5}
 addUserKnob {7 c_offset l "C offset" R -5 5}
 addUserKnob {7 d_offset l "D offset" R -5 5}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {22 set_to l "Set to Default" T "# Set to 1\nwaveMul = nuke.thisNode()\nknob1 = waveMul\['random_wave']\nknob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\nknob2 = waveMul\['sine_wave']\nknob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\nknob3 = waveMul\['triangle_wave']\nknob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\nknob4 = waveMul\['square_wave']\nknob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\nknob5 = waveMul\['sawtooth_wave']\nknob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\nknob6 = waveMul\['bounce_wave']\nknob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\nwaveMul\['range'].clearAnimated()\nwaveMul\['range'].setValue(0, 0)\nwaveMul\['range'].setValue(1, 1)\nwaveMul\['range'].setValue(1, 2)\nwaveMul\['range'].setValue(1, 3)" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 info l "" +STARTLINE T "<font color=#777777>modified by Attila Gasparetz | v1.01 | 2020 | "}
 addUserKnob {26 link l "" -STARTLINE T "<a href=\"https://www.gatimedia.co.uk/wave-expression-tools\"><font color=#888888>For more info</a>"}
}
