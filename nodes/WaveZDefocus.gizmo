ZDefocus2 {
 channels rgba
 size 0
 legacy_resize_mode false
 show_legacy_resize_mode false
 name WaveZDefocus
 label "Size: \[format \"%.1f\" \[value size]]"
 selected true
 xpos -700
 ypos 2
 addUserKnob {20 User}
 addUserKnob {22 random_wave l "<font color=#cccccc>Add Random Wave" T "# Add Random Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Random Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#20bd2b>Random Wave Added\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['size'].clearAnimated()\n    waveMul\['size'].setExpression(\"random((frame+offset)/waveLength) * (maxVal-minVal) + minVal\")\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Random Wave is already added!\"\"\")" +STARTLINE}
 addUserKnob {22 sine_wave l "<font color=#cccccc>Add Sine Wave" -STARTLINE T "# Add Sine Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Sine Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#20bd2b>Sine Wave Added\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['size'].clearAnimated()\n    waveMul\['size'].setExpression(\"(sin(2*pi*(frame+offset)/waveLength)+1)/2 * (maxVal-minVal) + minVal\")\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Sine Wave is already added!\"\"\")"}
 addUserKnob {22 triangle_wave l "<font color=#cccccc>Add Triangle Wave" -STARTLINE T "# Add Triangle Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Triangle Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#20bd2b>Triangle Wave Added\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['size'].clearAnimated()\n    waveMul\['size'].setExpression(\"(asin(sin(2*pi*(frame+offset)/waveLength))/pi+0.5) * (maxVal-minVal) + minVal\")\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Triangle Wave is already added!\"\"\")"}
 addUserKnob {22 square_wave l "<font color=#cccccc>Add Square Wave" T "# Add Square Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Square Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#20bd2b>Square Wave Added\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['size'].clearAnimated()\n    waveMul\['size'].setExpression(\"int(sin(2*pi*(frame+offset)/waveLength)+1) * (maxVal-minVal) + minVal\")\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Square Wave is already added!\"\"\")" +STARTLINE}
 addUserKnob {22 sawtooth_wave l "<font color=#cccccc>Add Sawtooth Wave" -STARTLINE T "# Add Sawtooth Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Sawtooth Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#20bd2b>Sawtooth Wave Added\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\n    waveMul\['size'].clearAnimated()\n    waveMul\['size'].setExpression(\"((frame+offset) % waveLength)/waveLength * (maxVal-minVal) + minVal\")\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Sawtooth Wave is already added!\"\"\")"}
 addUserKnob {22 bounce_wave l "<font color=#cccccc>Add Bounce Wave" -STARTLINE T "# Add Bounce Wave\nwaveMul = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.label() == \"<font color=#cccccc>Add Bounce Wave\":\n    knob1 = waveMul\['random_wave']\n    knob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\n    knob2 = waveMul\['sine_wave']\n    knob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\n    knob3 = waveMul\['triangle_wave']\n    knob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\n    knob4 = waveMul\['square_wave']\n    knob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\n    knob5 = waveMul\['sawtooth_wave']\n    knob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\n    knob6 = waveMul\['bounce_wave']\n    knob6.setLabel(\"<font color=#20bd2b>Bounce Wave Added\")\n\n    waveMul\['size'].clearAnimated()\n    waveMul\['size'].setExpression(\"abs(sin(pi*(frame + offset)/waveLength))* (maxVal-minVal) + minVal\")\n\nelse:\n    nuke.message(\"\"\"<center><b><font color=orange>Bounce Wave is already added!\"\"\")"}
 addUserKnob {26 ""}
 addUserKnob {7 waveLength R 0 100}
 waveLength 20
 addUserKnob {7 maxVal R 0 100}
 maxVal 20
 addUserKnob {7 minVal R 0 100}
 addUserKnob {7 offset t "\t\t" R -100 100}
 addUserKnob {26 ""}
 addUserKnob {22 set_to l "Set to Default" T "# Set to 1\nwaveMul = nuke.thisNode()\nknob1 = waveMul\['random_wave']\nknob1.setLabel(\"<font color=#cccccc>Add Random Wave\")\n\nknob2 = waveMul\['sine_wave']\nknob2.setLabel(\"<font color=#cccccc>Add Sine Wave\")\n\nknob3 = waveMul\['triangle_wave']\nknob3.setLabel(\"<font color=#cccccc>Add Triangle Wave\")\n\nknob4 = waveMul\['square_wave']\nknob4.setLabel(\"<font color=#cccccc>Add Square Wave\")\n\nknob5 = waveMul\['sawtooth_wave']\nknob5.setLabel(\"<font color=#cccccc>Add Sawtooth Wave\")\n\nknob6 = waveMul\['bounce_wave']\nknob6.setLabel(\"<font color=#cccccc>Add Bounce Wave\")\n\nwaveMul\['size'].clearAnimated()\nwaveMul\['size'].setValue(0)" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 info l "" +STARTLINE T "<font color=#777777>modified by Attila Gasparetz | v1.01 | 2020 | "}
 addUserKnob {26 link l "" -STARTLINE T "<a href=\"https://www.gatimedia.co.uk/wave-expression-tools\"><font color=#888888>For more info</a>"}
}
